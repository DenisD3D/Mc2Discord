apply from: '../properties.gradle'

buildscript {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT', changing: true
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '6.0.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = projectVersion
group = projectGroup
archivesBaseName = modid + '-forge-1.16.x'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

mixin {
    add sourceSets.main, "mc2discord.refmap.json"
}

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        server {
            workingDirectory file('run_server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            arg "-mixin.config=mc2discord.mixins.json"
            arg 'nogui'
            singleInstance true

            mods {
                mc2discord {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft('net.minecraftforge:forge:1.16.5-36.2.2')

    shadow(project(path: ':mc2discord-core', configuration: 'shadow'))

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor' // Mixin
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.2:processor' // Mixin

    implementation(group: 'io.netty', name: 'netty-all') {
        version {
            strictly '4.1.65.Final'
        }
    } // Fix compatibility between Minecraft & Reactor netty version in dev

    configurations.implementation.extendsFrom(configurations.shadow)
}

jar {
    classifier 'slim'
    manifest {
        attributes([
                "Specification-Title"   : "Mc2discord",
                "Specification-Vendor"  : "DenisD3D",
                "Specification-Version" : "1",
                "Implementation-Title"  : project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" : "DenisD3D",
                "MixinConfigs"          : "mc2discord.mixins.json"
        ])
    }
}

shadowJar {
    classifier ''

    configurations = [project.configurations.shadow]

    relocate('discord4j', repackGroup + 'discord4j')
    relocate('com.austinv11.servicer', repackGroup + 'com.austinv11.servicer')
    relocate('com.discord4j', repackGroup + 'com.discord4j')
    relocate('com.fasterxml.jackson', repackGroup + 'com.fasterxml.jackson')
    relocate('com.iwebpp', repackGroup + 'com.iwebpp')
    relocate('com.vdurmont.emoji', repackGroup + 'com.vdurmont.emoji')
    relocate('com.github.benmanes.caffeine', repackGroup + 'com.github.benmanes.caffeine')
    relocate('com.google.errorprone', repackGroup + 'com.google.errorprone')
    relocate('io.netty', repackGroup + 'io.netty')
    relocate('org.apache.commons.logging', repackGroup + 'org.apache.commons.logging')
    relocate('org.apache.commons.codec', repackGroup + 'org.apache.commons.codec')
    relocate('org.apache.http', repackGroup + 'org.apache.http') // TODO : remove
    relocate('org.apache.logging.slf4j', repackGroup + 'org.apache.logging.slf4j')
    relocate('org.checkerframework', repackGroup + 'org.checkerframework')
    relocate('org.json', repackGroup + 'org.json')
    relocate('org.reactivestreams', repackGroup + 'org.reactivestreams')
    relocate('org.slf4j', repackGroup + 'org.slf4j')
    relocate('reactor', repackGroup + 'reactor')
}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')